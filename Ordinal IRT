data {
  int<lower=1> N; // Number of observation. (for parties)
  int<lower=1> I; // Number of items (same for parties and cantons)
  int<lower=1> J; // Number of Actors
  int<lower=3> K; // number of categories for the ordered item
  int<lower=1; upper = K> y[N]; // list of outcome (binary for parties)
  int<lower=1> i[N]; // list of items 
  int<lower=1> j[N]; // list of actors
}


parameters {
  vector[I] beta;  // Discrimination parameter
  vector[J] theta;  // ideal position of actor j at time t;
  ordered[K-1] c; 
}


model {
  beta ~ normal(0, 5); // Prior for the discrimination of items
  alpha ~ normal(0, 5); // Prior for the difficulty of items
  theta ~ std_normal();
  
  for (n in 1:N) {
    y[n] ~ ordered_logistic(beta[i[n]] * theta[j[n]], c);
  
  } 
}
